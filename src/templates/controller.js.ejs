sap.ui.define(
	[
	"<%= props.namespace %>/mvc/BaseController",		
	"<%= props.namespace %>/model/RestModel",
	"sap/m/MessageBox"
	], 
	function (BaseController, RestModel, MessageBox) {
		"use strict";

		const FRAGMENT_CADASTRO_PATH = "<%= props.target%>.fragments.<%= props.name %>";
		const CONTROL_MODEL_NAME = "controlModel";
		const CURRENT_MODEL = "<%= props.name %>"
		return BaseController.extend("<%= props.target%>.<%= props.name %>", {
			onInit : function(){
				console.log("controller [<%= props.name %>] Iniciado");
			},	
			
			initModels(){
				this.<%= props.name %> = this.createLocalRestModel("<%= props.name %>.json");
				this.setModel(this.<%= props.name %>, CURRENT_MODEL);
				this.setModel(new JSONModel({NewEdit: true}), CONTROL_MODEL_NAME);
			},

			onAfterRendering :  function(){
				console.log("controller [<%= props.name %>] Renderizado");
			},	

			onBeforeRendering :  function(){
				console.log("controller [<%= props.name %>] Método chamado antes da Renderização");
			},	

			onExit :  function(){
				console.log("controller [<%= props.name %>] Este método é chamado após a destruição do View associada");
			},	

			onNewPress(oEvent){
				this._oNew<%= props.name %>Fragment = sap.ui.xmlfragment(FRAGMENT_CADASTRO_PATH, this);
				this.getView().addDependent(this._oNew<%= props.name %>Fragment);
				this._oNew<%= props.name %>Fragment.addStyleClass(this.getOwnerComponent().getContentDensityClass());

				this._oNew<%= props.name %>Fragment.setModel(new RestModel())
				this._oNew<%= props.name %>Fragment.open()
			},

			onEditPress(oEvent){
				this._oNew<%= props.name %>Fragment = sap.ui.xmlfragment(FRAGMENT_CADASTRO_PATH, this);
				this.getView().addDependent(this._oNew<%= props.name %>Fragment);
				this._oNew<%= props.name %>Fragment.addStyleClass(this.getOwnerComponent().getContentDensityClass());
				
				let selectedRow = oEvent.getSource().getParent().getParent();
				let table = selectedRow.getParent();
				let bindingInfo = table.getBindingInfo("items")
				let selectedObject = selectedRow.getBindingContext(bindingInfo.model).getObject()
				let selectedObjectModel = new RestModel();
				selectedObjectModel.setData(selectedObject)				
				this._oNew<%= props.name %>Fragment.setModel(selectedObjectModel)
				this._oNew<%= props.name %>Fragment.open()

			},
			
			onDeletePress(oEvent){
				let messageDeletion = this.getText("Commom.ConfirmDelete")
				let selectedRow = oEvent.getSource().getParent().getParent();
				let table = selectedRow.getParent();
				let bindingInfo = table.getBindingInfo("items")
				let selectedObject = selectedRow.getBindingContext(bindingInfo.model).getObject()
				let fullMessage = `${messageDeletion} ${selectedObject.Descricao}`;
				MessageBox.confirm(
					fullMessage, {
						icon: MessageBox.Icon.INFORMATION,
						actions: [MessageBox.Action.YES, MessageBox.Action.NO],
						emphasizedAction: MessageBox.Action.YES,
						onClose: function (oAction) {
							if(oAction == MessageBox.Action.YES){
								MessageBox.alert("Remoção confirmadoa pelo usuário ")
							}
						}
					}
				);

			}

		});
	}
);
